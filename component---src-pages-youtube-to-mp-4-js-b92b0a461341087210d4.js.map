{"version":3,"file":"component---src-pages-youtube-to-mp-4-js-b92b0a461341087210d4.js","mappings":"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","sources":["webpack://gatsby-starter-hello-world/./src/components/converter.js","webpack://gatsby-starter-hello-world/./src/styles/converter.module.css","webpack://gatsby-starter-hello-world/./src/styles/sections.module.css","webpack://gatsby-starter-hello-world/./src/components/sections.js","webpack://gatsby-starter-hello-world/./src/pages/youtube-to-mp4.js","webpack://gatsby-starter-hello-world/./src/styles/index.module.css"],"sourcesContent":["import * as React from \"react\"\r\nimport { useState } from \"react\"\r\nimport { FormattedMessage, useIntl, navigate } from \"gatsby-plugin-intl\"\r\nimport * as styles from \"../styles/converter.module.css\"\r\n\r\nconst Converter = () => {\r\n  const [inputValue, setInputValue] = useState();\r\n  const intl = useIntl();\r\n\r\n  const isYtUrl = (url) => {\r\n    const ytRegex = new RegExp(\r\n      /^((?:https?:)?\\/\\/)?((?:www|m)\\.)?((?:youtube\\.com|youtu.be))(\\/(?:[\\w\\\\-]+\\?v=|embed\\/|v\\/)?)([\\w\\\\-]+)(\\S+)?$/g\r\n    );\r\n    return ytRegex.test(url)\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value)\r\n  };\r\n\r\n  const handleClickEnter = (e) => {\r\n    if (e.keyCode === 13) {\r\n      if (isYtUrl(inputValue)) {\r\n        navigate(`/download`, { state: { url: inputValue } })\r\n      } else {\r\n        navigate(`/search`, { state: { url: inputValue } })\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleClickConvert = () => {\r\n    if (isYtUrl(inputValue)) {\r\n      navigate(`/download`, { state: { url: inputValue } })\r\n    } else {\r\n      navigate(`/search`, { state: { url: inputValue } })\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.converter}>\r\n        <input\r\n          type=\"search\"\r\n          className={styles.search}\r\n          placeholder={intl.formatMessage({ id: \"search-placeholder\" })}\r\n          onChange={handleInputChange}\r\n          onKeyDown={handleClickEnter}\r\n        />\r\n        <button\r\n          className={styles.button}\r\n          type=\"button\"\r\n          onClick={handleClickConvert}\r\n        >\r\n          <FormattedMessage id=\"convert-btn\"/>\r\n        </button>\r\n      </div>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Converter\r\n","// extracted by mini-css-extract-plugin\nexport var button = \"converter-module--button--dd9c1\";\nexport var converter = \"converter-module--converter--343e8\";\nexport var invalidTitle = \"converter-module--invalidTitle--eb4c6\";\nexport var invalidUrl = \"converter-module--invalidUrl--4c4e7\";\nexport var search = \"converter-module--search--3d96a\";","// extracted by mini-css-extract-plugin\nexport var answer = \"sections-module--answer--c19fc\";\nexport var boxDes = \"sections-module--boxDes--65d82\";\nexport var container = \"sections-module--container--579d0\";\nexport var convertNext = \"sections-module--convertNext--6f97b\";\nexport var desList = \"sections-module--desList--2f2e7\";\nexport var description = \"sections-module--description--425b7\";\nexport var image = \"sections-module--image--70dbe\";\nexport var list = \"sections-module--list--22eba\";\nexport var listCount = \"sections-module--listCount--2ff18\";\nexport var listIcon = \"sections-module--listIcon--74c36\";\nexport var listIconImg = \"sections-module--listIconImg--035dc\";\nexport var listItem = \"sections-module--listItem--32d6b\";\nexport var listStep = \"sections-module--listStep--c4673\";\nexport var listText = \"sections-module--listText--8ec5a\";\nexport var listWrapper = \"sections-module--listWrapper--198ad\";\nexport var sectionBest = \"sections-module--sectionBest--3c7cb\";\nexport var sectionCount = \"sections-module--sectionCount--c38ab\";\nexport var sectionDownType = \"sections-module--sectionDownType--85bd9\";\nexport var sectionQue = \"sections-module--sectionQue--8aeac\";","import * as React from \"react\"\r\nimport { FormattedMessage, navigate } from \"gatsby-plugin-intl\"\r\nimport { bestDescription, links, queAns, stepCount, typeDesc, typeIcon } from \"../data\"\r\nimport * as styles from \"../styles/sections.module.css\"\r\n\r\nconst Sections = () => {\r\n  const handleClickConvert = () => {\r\n    navigate(\"/\")\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.sectionBest}>\r\n        <h2><FormattedMessage id=\"best-desc-title\"/></h2>\r\n        <div>\r\n          {bestDescription.map((item, i) => (\r\n            <p key={i} className={styles.description}>{item.description}</p>\r\n          ))}\r\n        </div>\r\n        <ul className={styles.listItem}>\r\n          {links.map((link, i) => (\r\n            <li key={i} className={styles.list}>\r\n              <div className={styles.image} style={link.style}>{link.url}</div>\r\n              <div className={styles.desList}>\r\n                <h3>{link.text}</h3>\r\n                <p className={styles.boxDes}>{link.description}</p>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <div className={styles.sectionDownType}>\r\n          <h2><FormattedMessage id=\"download-extensions-title\"/></h2>\r\n          <ul className={styles.listIcon}>\r\n            {typeIcon.map((link, i) => (\r\n              <li key={i} className={styles.listIconImg}>{link.url}</li>\r\n            ))}\r\n          </ul>\r\n          <p className={styles.description}>{typeDesc}</p>\r\n          <button\r\n            className={styles.convertNext}\r\n            onClick={handleClickConvert}>\r\n            <FormattedMessage id=\"convert-now-btn\"/>\r\n          </button>\r\n        </div>\r\n        <div className={styles.sectionCount}>\r\n          <h2><FormattedMessage id=\"how-download-title\"/></h2>\r\n          <ul className={styles.listCount}>\r\n            {stepCount.map((item, i) => (\r\n              <li key={i} className={styles.listWrapper}>\r\n                <span style={item.style} className={styles.listStep}>{item.number}</span>\r\n                <span className={styles.listText}>{item.description}</span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div className={styles.sectionQue}>\r\n          <h2><FormattedMessage id=\"que-ans-title\"/></h2>\r\n          <div>\r\n            {queAns.map((item, i) => (\r\n              <div key={i} className={styles.answer}>\r\n                <h4>{item.que}</h4>\r\n                <div>\r\n                  {item.ans.map((item) => (\r\n                    <div>{item.ans}</div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sections\r\n","import * as React from \"react\"\r\nimport { FormattedMessage, useIntl } from \"gatsby-plugin-intl\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport Converter from \"../components/converter\"\r\nimport Sections from \"../components/sections\"\r\nimport * as styles from \"../styles/index.module.css\"\r\n\r\nconst Mp4 = () => {\r\n  const intl = useIntl();\r\n\r\n  return (\r\n    <Layout>\r\n      <Seo title={intl.formatMessage({ id: \"mp4-seo-title\" })}/>\r\n      <div className={styles.mainWrapper}>\r\n        <h1><FormattedMessage id=\"mp4-title\"/></h1>\r\n        <p><FormattedMessage id=\"mp4-desc\"/></p>\r\n        <Converter/>\r\n      </div>\r\n      <Sections/>\r\n    </Layout>\r\n  )\r\n};\r\n\r\nexport default Mp4\r\n","// extracted by mini-css-extract-plugin\nexport var listVideo = \"index-module--listVideo--611f9\";\nexport var mainWrapper = \"index-module--mainWrapper--45cff\";\nexport var videoBox = \"index-module--videoBox--8a625\";\nexport var videoHeading = \"index-module--videoHeading--e54e9\";\nexport var videoImg = \"index-module--videoImg--d490f\";"],"names":["inputValue","setInputValue","useState","intl","useIntl","isYtUrl","url","RegExp","test","className","type","placeholder","formatMessage","id","onChange","e","target","value","onKeyDown","keyCode","navigate","state","onClick","FormattedMessage","description","bestDescription","item","i","key","styles","links","link","style","text","typeIcon","typeDesc","stepCount","number","queAns","que","ans","map","title","listVideo","mainWrapper","videoBox","videoHeading","videoImg"],"sourceRoot":""}